/* Map of GeoJSON data from corn.geojson */


/*
//function to retrieve the data and place it on the map
function getData(mymap){
    //load the data
    $.ajax("data/corn.geojson", {
        dataType: "json",
        success: function(response){

            //create a Leaflet GeoJSON layer and add it to the map
            L.geoJson(response, {
                onEachFeature: onEachFeature
            }).addTo(map);
        }
    });
};

$(document).ready(getData);
*/

//function to retrieve the data and place it on the map
function getData(map){
    //load the data
    $.ajax("data/corn.geojson", {
        dataType: "geojson",
        success: function(response){

            //create a Leaflet GeoJSON layer and add it to the map
            L.geoJson(response).addTo(map);
        }
    });
};

$(document).ready(createMap);

//load the data
$.ajax("data/corn.geojson", {
    dataType: "geojson",
    success: function(response){
        //create marker options
        var geojsonMarkerOptions = {
            radius: 8,
            fillColor: "#ff7800",
            color: "#000",
            weight: 1,
            opacity: 1,
            fillOpacity: 0.8
        };

        //create a Leaflet GeoJSON layer and add it to the map
        L.geoJson(response, {
            pointToLayer: function (feature, latlng){
                return L.circleMarker(latlng, geojsonMarkerOptions);
            }
        }).addTo(map);
    }
});


//function to attach popups to each mapped feature
function onEachFeature(feature, layer) {
    //no property named popupContent; instead, create html string with all properties
    var popupContent = "";
    if (feature.properties) {
        //loop to add feature property names and values to html string
        for (var property in feature.properties){
            popupContent += "<p>" + property + ": " + feature.properties[property] + "</p>";
        }
        layer.bindPopup(popupContent);
    };
};


//function to retrieve the data and place it on the map
function getData(map){
    //load the data
    $.ajax("data/corn.geojson", {
        dataType: "json",
        success: function(response){

            //create a Leaflet GeoJSON layer and add it to the map
            L.geoJson(response, {
                onEachFeature: onEachFeature
            }).addTo(map);
        }
    });
};

//Example 2.3 line 22...load the data
    $.ajax("data/corn.geojson", {
        dataType: "json",
        success: function(response){

            //create a Leaflet GeoJSON layer and add it to the map
            L.geoJson(response, {
                //use filter function to only show cities with 2015 populations greater than 20 million
                filter: function(feature, layer) {
                    return feature.properties.Pop_2015 > 20;
                }
            }).addTo(map);
        }
    });

//function to retrieve the data and place it on the map
function getData(map){
    //load the data
    $.ajax("data/corn.geojson", {
        dataType: "json",
        success: function(response){
            //examine the data in the console to figure out how to construct the loop
            console.log(response)

            //create an L.markerClusterGroup layer
            var markers = L.markerClusterGroup();

            //loop through features to create markers and add to MarkerClusterGroup
            for (var i = 0; i < response.features.length; i++) {
                var a = response.features[i];
                //add properties html string to each marker
                var properties = "";
                for (var property in a.properties){
                    properties += "<p>" + property + ": " + a.properties[property] + "</p>";
                };
                var marker = L.marker(new L.LatLng(a.geometry.coordinates[1], a.geometry.coordinates[0]), { properties: properties });
                //add a popup for each marker
                marker.bindPopup(properties);
                //add marker to MarkerClusterGroup
                markers.addLayer(marker);
            }

            //add MarkerClusterGroup to map
            map.addLayer(markers);
        }
    });
};

//Example 2.7 line 1...function to retrieve the data and place it on the map
function getData(map){
    //load the data
    $.ajax("data/corn.geojson", {
        dataType: "json",
        success: function(response){
            //create a Leaflet GeoJSON layer
            var geoJsonLayer = L.geoJson(response);
            //create a L.markerClusterGroup layer
            var markers = L.markerClusterGroup();
            //add geojson to marker cluster layer
            markers.addLayer(geoJsonLayer);
            //add marker cluster layer to map
            map.addLayer(markers);
        }
    });
};



//Notes from main.js

/*
function jsAjax(){
    // Step 1: Create the request 
    var ajaxRequest = new XMLHttpRequest();

    //Step 2: Create an event handler to send received data to a callback function
    ajaxRequest.onreadystatechange = function(){
        if (ajaxRequest.readyState === 4){
            callback(ajaxRequest.response);
        };
    };

    //Step 3: Open the server connection
    ajaxRequest.open('GET', 'data/corn.geojson', true);

    //Step 4: Set the response data type
    ajaxRequest.responseType = "json";

    //Step 5: Send the request
    ajaxRequest.send();
};

//define callback function
function callback(response){
    //tasks using the data go here
    console.log(JSON.stringify(response));};

window.onload = jsAjax();

//define AJAX function
function jQueryAjax(){
    //basic jQuery ajax method
    $.ajax("data/corn.geojson", {
        dataType: "json",
        success: callback
    });
};

//define callback function
function callback(response, status, jqXHRobject){
    //tasks using the data go here
    console.log(response);
};

$(document).ready(jQueryAjax);

//function to retrieve the data and place it on the map
function getData(mymap){
    //load the data
    $.ajax("data/corn.geojson", {
        dataType: "json",
        success: function(response){

            //create a Leaflet GeoJSON layer and add it to the map
            L.geoJson(response, {
                onEachFeature: onEachFeature
            }).addTo(mymap);
        }
    });
};


//an AJAX function
function jQueryAjax(){
    var mydata = $.ajax("data/corn.geojson", {
        dataType: "json"
    });
    return mydata;
};

var mydata = jQueryAjax();

console.log(mydata); //the jQuery XMLHttpRequest object



//L.geojson()
var marker = L.marker([39.000, -97.000]).addTo(mymap);

var circle = L.circle([39.000, -97.000], {
    color: 'red',
    fillColor: '#f03',
    fillOpacity: 0.5,
    radius: 500
}).addTo(mymap);

var polygon = L.polygon([
    [38.000, -97.000],
    [39.000, -98.000],
    [39.000, -97.000]
]).addTo(mymap);

marker.bindPopup("<b>Hello world!</b><br>I am a popup.").openPopup();
circle.bindPopup("I am a circle.");
polygon.bindPopup("I am a polygon.");

var popup = L.popup()
    .setLatLng([51.5, -0.09])
    .setContent("I am a standalone popup.")
    .openOn(mymap);
function onMapClick(e) {
    alert("You clicked the map at " + e.latlng);
}

mymap.on('click', onMapClick);

var popup = L.popup();

function onMapClick(e) {
    popup
        .setLatLng(e.latlng)
        .setContent("You clicked the map at " + e.latlng.toString())
        .openOn(mymap);
}

mymap.on('click', onMapClick);
            
*/

/* Below content used in pre-jquery code development. From main.js

//Adding markers to features.
var geojsonMarkerOptions = {
    radius: 10,
    fillColor: "#faf357",
    weight: 0,
    opacity: 1,
    fillOpacity: 0.8
};

//Adjust radius of each feature to to yield value.
// Currently doesn't work...
function onEachFeature(feature, layer) {
    if (feature.properties && feature.properties.yr2017) {
       var geojsonMarkerOptions = {
           radius: yr2017}
       }
    }

//Adding markers to geojson features.
L.geoJSON(geojsonFeature, {pointToLayer: function (feature, latlng) {
    return L.circleMarker(latlng, geojsonMarkerOptions);
}}).addTo(mymap);  

L.geoJSON(geojsonFeature, {pointToLayer: function (feature, latlng) {
        return L.circleMarker(latlng, geojsonMarkerOptions);}})

//Couldn't get this to work in main.js
$.ajax("data/Corn.geojson", {
        dataType: "json",
        success: function(response){
            console.log("in response function")
            //create a leaflet geojson layer and add to map
            L.geoJson(response).addTo(mymap);}
    })
    
    
//Working block for getting data.
// Function to retrieve the data and place on map.
function getData(mymap){
    //load the data
    //Adding markers to geojson features.
    L.geoJSON(geojsonFeature, {pointToLayer: function (feature, latlng) {
        return L.circleMarker(latlng, geojsonMarkerOptions);
        onEachFeature
    }}).addTo(mymap);
};